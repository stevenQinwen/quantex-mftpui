.root {
  :global {
    .react-contextmenu {
      min-width: 80px;
      font-size: 16px;
      color: #373a3c;
      text-align: left;
      background-color: #fff;
      background-clip: padding-box;
      box-shadow: 0 0 4px rgba(0, 0, 0, 0.2);
      outline: none;
      opacity: 0;
      pointer-events: none;
    }

    .react-contextmenu.react-contextmenu--visible {
      opacity: 1;
      pointer-events: auto;
      z-index: 9999;
    }

    .react-contextmenu-item {
      font-size: 12px;
      height: 30px;
      line-height: 30px;
      text-indent: 4px;
      padding: 0 8px;
      color: #373a3c;
      text-align: inherit;
      white-space: nowrap;
      background: 0 0;
      border: 0;
      cursor: pointer;
    }

    .react-contextmenu-item {
      span {
        display: block;
      }
      &:hover {
        background-color: #ecf6fd;
      }
      &:focus {
        border: none;
        outline: none;
      }
    }

    .react-contextmenu-item.react-contextmenu-item--active,
    .react-contextmenu-item.react-contextmenu-item--selected {
      color: #fff;
      background-color: #20a0ff;
      text-decoration: none;
    }

    .react-contextmenu-item.react-contextmenu-item--disabled,
    .react-contextmenu-item.react-contextmenu-item--disabled:hover {
      color: #878a8c;
      background-color: #ecf6fd;
      border-color: rgba(0,0,0,.15);
    }

    .react-contextmenu-item--divider {
      margin-bottom: 3px;
      padding: 2px 0;
      border-bottom: 1px solid rgba(0,0,0,.15);
      cursor: inherit;
    }

    .react-contextmenu-item--divider:hover {
      background-color: transparent;
      border-color: rgba(0,0,0,.15);
    }

    .react-contextmenu-item.react-contextmenu-submenu {
      padding: 0;
    }

    .react-contextmenu-item.react-contextmenu-submenu > .react-contextmenu-item {
    }

    .react-contextmenu-item.react-contextmenu-submenu > .react-contextmenu-item:after {
      content: "â–¶";
      display: inline-block;
      position: absolute;
      right: 7px;
    }

    .example-multiple-targets::after {
      content: attr(data-count);
      display: block;
    }
  }
}
